{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\Desktop\\\\Dev Prog\\\\React Quiz\\\\my-app\\\\src\\\\answers.js\";\nimport React from \"react\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Answers(props) {\n  const styles = props.selected ? \"answer-button-selected\" : \"answer-button-unselected\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles,\n      onClick: () => {\n        props.answerSelected(props.id);\n      },\n      children: decode(props.answer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n/*<button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[0])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[1])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[2])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[3])}</button>*/\n\n_c = Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["C:/Users/steph/OneDrive/Desktop/Dev Prog/React Quiz/my-app/src/answers.js"],"names":["React","decode","Answers","props","styles","selected","answerSelected","id","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,eAArB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAElC,QAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,GAAiB,wBAAjB,GAA4C,0BAA3D;AAEA,sBACI;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAED,MAAnB;AAA2B,MAAA,OAAO,EAAE,MAAM;AAACD,QAAAA,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACI,EAA3B;AAA+B,OAA1E;AAAA,gBAA6EN,MAAM,CAACE,KAAK,CAACK,MAAP;AAAnF;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAKH;AAGD;AACA;AACA;AACA;;KAfwBN,O","sourcesContent":["import React from \"react\"\r\nimport {decode} from \"html-entities\"\r\n\r\nexport default function Answers(props){\r\n\r\n    const styles = props.selected ? \"answer-button-selected\" : \"answer-button-unselected\"\r\n    \r\n    return(\r\n        <>\r\n        <button className={styles} onClick={() => {props.answerSelected(props.id)}}>{decode(props.answer)}</button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n/*<button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[0])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[1])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[2])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[3])}</button>*/"]},"metadata":{},"sourceType":"module"}
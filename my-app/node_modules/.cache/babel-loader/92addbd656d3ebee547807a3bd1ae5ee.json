{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\Desktop\\\\Dev Prog\\\\React Quiz\\\\my-app\\\\src\\\\answers.js\";\nimport React from \"react\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Answers(props) {\n  const styles = props.selected ? \"answer-button-selected\" : \"answer-button-unselected\";\n  const displayAnswers = props.answerArr.map(a => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles,\n      onClick: props.selectAnswer,\n      children: decode(a)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-button-container\",\n      children: displayAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n/*<button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[0])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[1])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[2])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[3])}</button>*/\n\n_c = Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["C:/Users/steph/OneDrive/Desktop/Dev Prog/React Quiz/my-app/src/answers.js"],"names":["React","decode","Answers","props","styles","selected","displayAnswers","answerArr","map","a","selectAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,eAArB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAElC,QAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,GAAiB,wBAAjB,GAA4C,0BAA3D;AAEA,QAAMC,cAAc,GAAGH,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AAC5C,wBACI;AAAQ,MAAA,SAAS,EAAEL,MAAnB;AAA2B,MAAA,OAAO,EAAED,KAAK,CAACO,YAA1C;AAAA,gBAAyDT,MAAM,CAACQ,CAAD;AAA/D;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GALsB,CAAvB;AAOA,sBACI;AAAA,4BAEA;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADJ;AASH;AAGD;AACA;AACA;AACA;;KA1BwBJ,O","sourcesContent":["import React from \"react\"\r\nimport {decode} from \"html-entities\"\r\n\r\nexport default function Answers(props){\r\n\r\n    const styles = props.selected ? \"answer-button-selected\" : \"answer-button-unselected\"\r\n\r\n    const displayAnswers = props.answerArr.map(a => {\r\n        return(\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(a)}</button>\r\n        )\r\n        \r\n    })\r\n    \r\n    return(\r\n        <>\r\n\r\n        <div className=\"answer-button-container\">\r\n            {displayAnswers}\r\n        </div>\r\n        <hr className=\"divider\"/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n/*<button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[0])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[1])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[2])}</button>\r\n            <button className={styles} onClick={props.selectAnswer}>{decode(props.answerArr[3])}</button>*/"]},"metadata":{},"sourceType":"module"}
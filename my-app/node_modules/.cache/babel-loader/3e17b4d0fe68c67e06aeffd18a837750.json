{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\Desktop\\\\Dev Prog\\\\React Quiz\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport IntroPage from \"./intropage.js\";\nimport Quiz from \"./questions.js\";\nimport Answers from \"./answers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [StartGame, setStartGame] = useState(true);\n  const [selected, setSelected] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [answerArr, setAnswerArr] = useState([]);\n  useEffect(() => {\n    let finalAnswerArray = [];\n    let answerArray = [];\n\n    for (let q of questions) {\n      answerArray.push(q.correct_answer);\n      answerArray.push(q.incorrect_answers);\n      finalAnswerArray.push(answerArray.flat());\n      answerArray = [];\n    }\n\n    setAnswerArr(finalAnswerArray);\n  }, []);\n\n  function answerSelected() {\n    setSelected(!selected);\n  }\n\n  function beginGame() {\n    setStartGame(true);\n  }\n\n  useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuestions(data.results));\n  }, []);\n  const displayQuestions = questions.map(q => /*#__PURE__*/_jsxDEV(Quiz, {\n    selectAnswer: answerSelected,\n    selected: selected,\n    question: q.question,\n    answerArr: answerArr,\n    category: q.category,\n    difficulty: q.difficulty\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: StartGame ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [displayQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-answers-button\",\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(IntroPage, {\n      startGame: beginGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nG2zQFfoAbTs/Ama/az9tYZWfcI=\");\n\n_c = App;\nexport default App;\n/*\n0:\ncategory: \"Science & Nature\"\ncorrect_answer: \"Talc\"\ndifficulty: \"medium\"\nincorrect_answers: (3) ['Quartz', 'Diamond', 'Gypsum']\nquestion: \"What mineral has the lowest number on the Mohs scale?\"\ntype: \"multiple\"\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/steph/OneDrive/Desktop/Dev Prog/React Quiz/my-app/src/App.js"],"names":["React","useState","useEffect","IntroPage","Quiz","Answers","App","StartGame","setStartGame","selected","setSelected","questions","setQuestions","answerArr","setAnswerArr","finalAnswerArray","answerArray","q","push","correct_answer","incorrect_answers","flat","answerSelected","beginGame","fetch","then","res","json","data","results","displayQuestions","map","question","category","difficulty"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,gBAAgB,GAAG,EAAvB;AACA,QAAIC,WAAW,GAAE,EAAjB;;AACA,SAAI,IAAIC,CAAR,IAAaN,SAAb,EAAuB;AACrBK,MAAAA,WAAW,CAACE,IAAZ,CAAiBD,CAAC,CAACE,cAAnB;AACAH,MAAAA,WAAW,CAACE,IAAZ,CAAiBD,CAAC,CAACG,iBAAnB;AACAL,MAAAA,gBAAgB,CAACG,IAAjB,CAAsBF,WAAW,CAACK,IAAZ,EAAtB;AACAL,MAAAA,WAAW,GAAG,EAAd;AACD;;AACDF,IAAAA,YAAY,CAACC,gBAAD,CAAZ;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,WAASO,cAAT,GAAyB;AACvBZ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASc,SAAT,GAAqB;AACnBf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIhB,YAAY,CAACgB,IAAI,CAACC,OAAN,CAF5B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,gBAAgB,GAAGnB,SAAS,CAACoB,GAAV,CAAcd,CAAC,iBAGpC,QAAC,IAAD;AACA,IAAA,YAAY,EAAIK,cADhB;AAEA,IAAA,QAAQ,EAAIb,QAFZ;AAGA,IAAA,QAAQ,EAAIQ,CAAC,CAACe,QAHd;AAIA,IAAA,SAAS,EAAInB,SAJb;AAKA,IAAA,QAAQ,EAAII,CAAC,CAACgB,QALd;AAMA,IAAA,UAAU,EAAIhB,CAAC,CAACiB;AANhB;AAAA;AAAA;AAAA;AAAA,UAHqB,CAAzB;AAeA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAGI3B,SAAS,gBAGT;AAAA,iBACGuB,gBADH,eAEE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAHS,gBAYT,QAAC,SAAD;AACA,MAAA,SAAS,EAAIP;AADb;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UAFF;AA0BD;;GA7EQjB,G;;KAAAA,G;AA+ET,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport IntroPage from \"./intropage.js\"\nimport Quiz from \"./questions.js\"\nimport Answers from \"./answers.js\"\n\nfunction App() {\n\n  const [StartGame, setStartGame] = useState(true)\n\n  const [selected, setSelected] = useState(false)\n\n  const [questions, setQuestions] = useState([])\n\n  const [answerArr, setAnswerArr] = useState([])\n\n  useEffect(() => {\n    let finalAnswerArray = []\n    let answerArray =[]\n    for(let q of questions){\n      answerArray.push(q.correct_answer)\n      answerArray.push(q.incorrect_answers)\n      finalAnswerArray.push(answerArray.flat())\n      answerArray = []\n    }\n    setAnswerArr(finalAnswerArray)\n  }, [])\n\n  function answerSelected(){\n    setSelected(!selected)\n  }\n\n  function beginGame() {\n    setStartGame(true)\n  }\n\n  useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n      .then(res => res.json())\n      .then(data => setQuestions(data.results))\n  }, [])\n\n  const displayQuestions = questions.map(q => (\n\n    \n      <Quiz \n      selectAnswer = {answerSelected}\n      selected = {selected}\n      question = {q.question}\n      answerArr = {answerArr}\n      category = {q.category}\n      difficulty = {q.difficulty}\n      />\n    \n    \n  ))\n\n  return (\n\n    <div className=\"container\">\n\n      {\n        StartGame \n        \n        ?\n        <>\n          {displayQuestions}\n          <button className=\"check-answers-button\">Check Answers</button>\n        </>\n\n        \n\n        :\n      \n        <IntroPage \n        startGame = {beginGame}\n\n        />\n      }\n\n    </div>\n    \n  );\n}\n\nexport default App;\n\n/*\n0:\ncategory: \"Science & Nature\"\ncorrect_answer: \"Talc\"\ndifficulty: \"medium\"\nincorrect_answers: (3) ['Quartz', 'Diamond', 'Gypsum']\nquestion: \"What mineral has the lowest number on the Mohs scale?\"\ntype: \"multiple\"\n */"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\Desktop\\\\Dev Prog\\\\React Quiz\\\\my-app\\\\src\\\\answers.js\";\nimport React from \"react\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Answers(props) {\n  function determineStyles() {\n    if (props.answerCheck) {\n      if (props.isCorrect && props.selected) {\n        return \"answer-button-isCorrect\";\n      } else if (props.selected && props.isCorrect === false) {\n        return \"answer-button-isNotCorrect\";\n      } else if (props.selected === false) {\n        return \"answer-button-unselected-answerCheck\";\n      }\n    } else if (props.answerCheck === false) {\n      if (props.selected) {\n        \"answer-button-selected\";\n      } else {\n        \"answer-button-unselected\";\n      }\n    }\n  } //const styles = props.selected ? \"answer-button-selected\" : \"answer-button-unselected\"\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: determineStyles(),\n      onClick: () => props.selectAnswer(props.id),\n      children: decode(props.answer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["C:/Users/steph/OneDrive/Desktop/Dev Prog/React Quiz/my-app/src/answers.js"],"names":["React","decode","Answers","props","determineStyles","answerCheck","isCorrect","selected","selectAnswer","id","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,eAArB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAElC,WAASC,eAAT,GAA0B;AAEtB,QAAGD,KAAK,CAACE,WAAT,EAAqB;AACjB,UAAGF,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACI,QAA5B,EAAqC;AACjC,eAAO,yBAAP;AACH,OAFD,MAEM,IAAGJ,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACG,SAAN,KAAoB,KAAzC,EAA+C;AACjD,eAAO,4BAAP;AACH,OAFK,MAEA,IAAGH,KAAK,CAACI,QAAN,KAAmB,KAAtB,EAA4B;AAC9B,eAAO,sCAAP;AACH;AACJ,KARD,MAQM,IAAGJ,KAAK,CAACE,WAAN,KAAsB,KAAzB,EAA+B;AACjC,UAAGF,KAAK,CAACI,QAAT,EAAkB;AACd;AACH,OAFD,MAEK;AACD;AACH;AACJ;AACJ,GAnBiC,CAqBlC;;;AAEA,sBACI;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAEH,eAAe,EAAlC;AAAsC,MAAA,OAAO,EAAE,MAAMD,KAAK,CAACK,YAAN,CAAmBL,KAAK,CAACM,EAAzB,CAArD;AAAA,gBAAoFR,MAAM,CAACE,KAAK,CAACO,MAAP;AAA1F;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAKH;KA5BuBR,O","sourcesContent":["import React from \"react\"\r\nimport {decode} from \"html-entities\"\r\n\r\nexport default function Answers(props){\r\n\r\n    function determineStyles(){\r\n        \r\n        if(props.answerCheck){\r\n            if(props.isCorrect && props.selected){\r\n                return \"answer-button-isCorrect\"\r\n            }else if(props.selected && props.isCorrect === false){\r\n                return \"answer-button-isNotCorrect\"\r\n            }else if(props.selected === false){\r\n                return \"answer-button-unselected-answerCheck\"\r\n            }\r\n        }else if(props.answerCheck === false){\r\n            if(props.selected){\r\n                \"answer-button-selected\"\r\n            }else{\r\n                \"answer-button-unselected\"\r\n            }\r\n        }\r\n    }\r\n\r\n    //const styles = props.selected ? \"answer-button-selected\" : \"answer-button-unselected\"\r\n    \r\n    return(\r\n        <>\r\n        <button className={determineStyles()} onClick={() => props.selectAnswer(props.id)}>{decode(props.answer)}</button>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}